parameters:
  services: ''
  registryEndpoint: ''
  helmfrom: ''
  helmto: ''
  buildId: ''


jobs:
- job: BuildLinux
  condition: ne('${{ variables['Build.Reason'] }}', 'PullRequest')
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: DockerCompose@0
    displayName: Compose build ${{ parameters.services }}
    inputs:
      dockerComposeCommand: 'build ${{ parameters.services }}'
      containerregistrytype: Container Registry
      dockerRegistryEndpoint: ${{ parameters.registryEndpoint }}
      dockerComposeFile: src/docker-compose.yml
      qualifyImageNames: true
      projectName: ""
      dockerComposeFileArgs: ""
  - task: DockerCompose@0
    displayName: Compose push ${{ parameters.images }}
    inputs:
      dockerComposeCommand: 'push ${{ parameters.services }}'
      containerregistrytype: Container Registry
      dockerRegistryEndpoint: ${{ parameters.registryEndpoint }}
      dockerComposeFile: src/docker-compose.yml
      qualifyImageNames: true
      projectName: ""
      dockerComposeFileArgs: ""
- job: BuildWindows
  condition: ne('${{ variables['Build.Reason'] }}', 'PullRequest')
  pool:
    vmImage: 'windows-2019'
  steps:
  - task: DockerCompose@0
    displayName: Compose build ${{ parameters.services }}
    inputs:
      dockerComposeCommand: 'build ${{ parameters.services }}'
      containerregistrytype: Container Registry
      dockerRegistryEndpoint: ${{ parameters.registryEndpoint }}
      dockerComposeFile: src/docker-compose.yml
      qualifyImageNames: true
      projectName: ""
      dockerComposeFileArgs: |
        PLATFORM=win
        NODE_IMAGE=stefanscherer/node-windows:10
  - task: DockerCompose@0
    displayName: Compose push ${{ parameters.services }}
    inputs:
      dockerComposeCommand: 'push ${{ parameters.services }}'
      containerregistrytype: Container Registry
      dockerRegistryEndpoint: ${{ parameters.registryEndpoint }}
      dockerComposeFile: src/docker-compose.yml
      qualifyImageNames: true
      projectName: ""
      dockerComposeFileArgs: |
        PLATFORM=win  